{"version":3,"sources":["images/noresults.png","images/logo.png","components/Header.js","components/Form.js","components/Card.js","components/List.js","components/CharterDetail.js","components/App.js","service/API.js","index.js"],"names":["module","exports","Header","className","to","replace","src","logo","alt","Form","props","onSubmit","type","onChange","onNameChange","placeholder","placeholderSearch","value","onNumberChange","valueEpisodes","placeholderEpisodes","items","map","item","i","htmlFor","key","name","id","onGenderChange","onClick","onReset","Card","elem","image","species","status","Alien","Human","Alive","Dead","unknown","prototypes","PropTypes","img","string","List","list","length","sort","otherelem","localeCompare","noresults","CharterDetail","origin","episode","App","useState","characters","setCharacters","searchInput","setSearchInput","genders","setGenders","episodes","setEpisodes","target","ev","preventDefault","applyFilters","filteredCharacters","filter","toUpperCase","includes","filterGender","gender","filterEpisodes","parseInt","newSearch","getGenders","Set","add","Array","from","othergender","useEffect","fetch","then","response","json","results","exact","path","render","routerProps","match","params","array","find","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.425f60d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noresults.90b5fda3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react'\nimport '../styles/Header.scss';\nimport { Link } from \"react-router-dom\";\nimport logo from '../images/logo.png'\n\nfunction Header() {\n\n  return (\n    <header className='header'>\n      <Link to='/' replace>\n        <img className='logo' src={logo} alt='Logo Rick and Morty'></img>\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react'\nimport '../styles/Form.scss';\n\nfunction Form(props) {\n\n  return (\n    <form className='form' onSubmit={props.onSubmit}>\n      <div>\n        <input className='fom-input-text' type='search' onChange={props.onNameChange} placeholder={props.placeholderSearch}\n          value={props.value}>\n        </input>\n        <input className='fom-input-text' type='search' onChange={props.onNumberChange} value={props.valueEpisodes} placeholder={props.placeholderEpisodes}>\n        </input>\n      </div>\n      <div className=\"Radio\">\n        {\n          props.items.map((item, i) =>\n            <label htmlFor={item} key={i} name={props.name}><input className='form-input-radio' type='radio' id={item} name={props.name} value={item} onChange={props.onGenderChange} />{item}</label>\n          )\n        }\n      </div>\n      <button className='form-reset' type=\"reset\" onClick={props.onReset}>\n        Nueva b√∫squeda\n      </button>\n    </form >\n  );\n}\n\nexport default Form;","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport '../styles/Card.scss';\n\nfunction Card(props) {\n  const { image, name, species, id, status } = props.elem;\n  const statusConversion = {\n    Alive: '‚úÖ',\n    Dead: '‚ùå',\n    unknown: '‚ùì'\n  }\n\n  const speciesConversion = {\n    Alien: 'üëΩ',\n    Human: 'üòÉ'\n  }\n\n  return (\n    <article className='card'>\n      <Link to={'/CharacterDetail/' + id}>\n        <img className='card-img' src={image} alt={name}></img>\n        <h2 className='card-name'>{name}</h2>\n        <div>\n          <div className='card-content'>\n            <p>{species + ' ' + speciesConversion[species]} </p>\n            <p >{'Estado: ' + statusConversion[status]}</p>\n            <p className='card-button'> M√°s info</p>\n          </div>\n        </div>\n      </Link>\n    </article>\n  );\n}\n\nCard.prototypes = {\n  image: PropTypes.img,\n  name: PropTypes.string,\n  species: PropTypes.string,\n  id: PropTypes.string,\n  status: PropTypes.string\n}\n\nexport default Card;","import React from 'react';\nimport '../styles/List.scss';\nimport noresults from '../images/noresults.png'\nimport Card from './Card';\n\n\nfunction List(props) {\n\n  return (\n    < main className=\"list\" >\n      {props.list.length ? props.list.sort((elem, otherelem) => elem.name.localeCompare(otherelem.name)).map((elem, i) => <Card key={i} elem={elem}></Card>) : <div className='list-no-results'>\n        <h2 className='list-no-content'>No hay ning√∫n personaje que coincida con la b√∫squeda \"{props.value}\"</h2>\n        <img className='no-content-img' src={noresults} alt='Rick and Morty'></img>\n      </div>}\n    </main >\n  );\n}\n\nexport default List;\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport noresults from '../images/noresults.png'\nimport '../styles/CharacterDetail.scss';\n\nfunction CharterDetail(props) {\n\n  if (props.elem) {\n    return (\n      <main className='character'>\n        <article className='character-detail'>\n          <div>\n            <h2 >{props.elem.name}</h2>\n            <img src={props.elem.image} alt={\n              props.elem.name}></img>\n          </div>\n          <div className='character-detail-content'>\n            <p>{props.elem.species}</p>\n            <p >{props.elem.status}</p>\n            <p>{props.elem.origin.name}</p>\n            <p>{'Episodios: ' + props.elem.episode.length}</p>\n          </div>\n        </article>\n        <Link to={'/'} className='character-detail-button'>Volver</Link>\n      </main>\n    );\n  } else {\n    return (\n      <div className='character-detail-no-content'>\n        <h2 className='list-no-content'>No hay datos</h2>\n        <Link className='character-detail-button' to={'/'}><img className='no-content-img' src={noresults} alt='Rick and Morty'></img>\n          <p>Volver</p></Link>\n      </div>\n    )\n  }\n}\n\nexport default CharterDetail;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { getCharactersFromAPI } from '../service/API';\nimport '../styles/App.scss';\nimport Header from './Header';\nimport Form from './Form';\nimport List from './List';\nimport CharacterDetail from './CharterDetail'\n\nfunction App() {\n  const [characters, setCharacters] = useState([])\n  const [searchInput, setSearchInput] = useState('')\n  const [genders, setGenders] = useState('')\n  const [episodes, setEpisodes] = useState('')\n\n  useEffect(() => {\n    getCharactersFromAPI().then(characters => {\n      setCharacters(characters)\n    })\n  }, []);\n\n  function onNameChange({ target }) {\n    setSearchInput(target.value)\n  }\n\n  function onGenderChange({ target }) {\n    setGenders(target.value);\n\n  }\n\n  function onNumberChange({ target }) {\n    setEpisodes(target.value);\n\n  }\n\n  function onSubmit(ev) {\n    ev.preventDefault()\n  }\n\n  function applyFilters() {\n    let filteredCharacters = searchInput ? characters.filter(elem => elem.name.toUpperCase().includes(searchInput.toUpperCase())) : characters;\n    let filterGender = genders.length ? filteredCharacters.filter(elem => elem.gender === genders) : filteredCharacters;\n    let filterEpisodes = characters.filter(elem => elem.episode.length === parseInt(episodes));\n\n    if (searchInput) {\n      return filterGender;\n\n    } if (genders.length) {\n      return filterGender;\n    }\n    if (episodes) {\n      return filterEpisodes;\n\n    } else {\n      return characters;\n    }\n  }\n\n  function searchCharacterById(id, array) {\n    return array.find(elem => elem.id.toString() === id.toString());\n  }\n\n  function newSearch() {\n    setSearchInput('');\n    setGenders('');\n    setEpisodes('');\n\n  }\n\n  function getGenders() {\n    //Creo un SET (Como un array sin repeticiones)\n    const genders = new Set([]);\n    characters.map(item =>\n      genders.add(item.gender)\n    );\n    //Transforma un set en Array\n    return Array.from(genders).sort((gender, othergender) => gender.localeCompare(othergender));\n  }\n\n  return (\n    <>\n      <Header></Header>\n      <Switch>\n        <Route exact path='/' render={\n          () =>\n            <>\n              <Form placeholderSearch='Busca tu personaje' placeholderEpisodes='Busca por n¬∫ de episodios' onNameChange={onNameChange} onSubmit={onSubmit} value={searchInput} onReset={newSearch} items={getGenders()} name={'gender'} onGenderChange={onGenderChange} onNumberChange={onNumberChange} valueEpisodes={episodes}></Form>\n              <List list={applyFilters()} value={searchInput} ></List>\n            </>\n        }>\n        </Route>\n        <Route\n          path='/CharacterDetail/:id'\n          render={routerProps =>\n            <CharacterDetail match={routerProps.match} elem={searchCharacterById(routerProps.match.params.id, characters)}></CharacterDetail>\n          }\n        ></Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const ENDPOINT = 'https://rickandmortyapi.com/api/character/';\n\nconst getCharactersFromAPI = () => fetch(ENDPOINT)\n  .then(response => response.json())\n  .then(characters => characters.results)\n\nexport { getCharactersFromAPI };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './styles/index.scss';\nimport App from './components/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}