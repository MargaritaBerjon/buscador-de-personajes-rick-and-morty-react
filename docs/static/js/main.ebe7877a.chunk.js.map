{"version":3,"sources":["images/noresults.png","images/logo.png","components/Header.js","components/Form.js","components/Card.js","components/List.js","components/CharterDetail.js","components/App.js","service/API.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","Form","props","onSubmit","type","onChange","onNameChange","placeholder","placeholderSearch","value","onClick","onReset","Card","elem","image","name","species","id","status","Alien","Human","Alive","Dead","unknown","List","list","sort","otherelem","localeCompare","length","map","i","key","noresults","CharterDetail","origin","episode","App","useState","characters","setCharacters","searchInput","setSearchInput","target","ev","preventDefault","newSearch","useEffect","fetch","then","response","json","results","exact","path","render","filter","toUpperCase","includes","routerProps","match","params","array","find","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebe7877a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noresults.90b5fda3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react'\nimport '../styles/Header.scss';\nimport { Link } from \"react-router-dom\";\nimport logo from '../images/logo.png'\n\nfunction Header() {\n\n  return (\n    <h1 className='header'>\n      <div>\n        <Link to={'/'}>\n          <img className='logo' src={logo} alt='Logo Rick and Morty'></img>\n        </Link>\n      </div>\n    </h1>\n  );\n}\n\nexport default Header;","import React from 'react'\nimport '../styles/Form.scss';\n\nfunction Form(props) {\n\n  return (\n    <form className='form' onSubmit={props.onSubmit}>\n      <input className='fom-input-text' type='search' onChange={props.onNameChange} placeholder={props.placeholderSearch}\n        value={props.value}>\n      </input>\n      <button className='form-reset' type=\"reset\" onClick={props.onReset}>\n        Borrar busqueda\n      </button>\n    </form >\n  );\n}\n\nexport default Form;","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport '../styles/Card.scss';\n\nfunction Card(props) {\n  const { image, name, species, id, status } = props.elem;\n  const statusConversion = {\n    Alive: '‚úÖ',\n    Dead: '‚ùå',\n    unknown: '‚ùì'\n  }\n\n  const speciesConversion = {\n    Alien: 'üëΩ',\n    Human: 'üòÉ'\n  }\n\n  return (\n    <article className='card'><img src={image} alt={\n      name}></img>\n      <h2 >{name}</h2>\n      <div className='card-img'>\n        <div className='card-content'>\n          <p>{species + ' ' + speciesConversion[species]} </p>\n          <p >{'Estado: ' + statusConversion[status]}</p>\n          <Link className='card-button' to={'/CharacterDetail/' + id}>M√°s info</Link>\n        </div>\n      </div></article>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport '../styles/List.scss';\nimport noresults from '../images/noresults.png'\nimport Card from './Card';\n\n\nfunction List(props) {\n  //Ordena el array por nombre alfab√©ticamente\n  props.list.sort((elem, otherelem) => elem.name.localeCompare(otherelem.name));\n  return (\n    < section className=\"list\" >\n      {props.list.length ? props.list.map((elem, i) => <Card key={i} elem={elem}></Card>) : <div className='list-no-results'>\n        <h2 className='list-no-content'>No hay ning√∫n personaje que coincida con la palabra \"{props.value}\"</h2>\n        <img src={noresults} alt='Rick and Morty'></img>\n      </div>}\n    </section >\n  );\n}\n\nexport default List;\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport noresults from '../images/noresults.png'\nimport '../styles/CharacterDetail.scss';\n\nfunction CharterDetail(props) {\n\n  if (props.elem) {\n    return (\n      <section className='character'>\n        <article className='character-detail'>\n          <div>\n            <h2 >{props.elem.name}</h2>\n            <img src={props.elem.image} alt={\n              props.elem.name}></img>\n          </div>\n          <div className='character-detail-content'>\n            <p>{props.elem.species}</p>\n            <p >{props.elem.status}</p>\n            <p>{props.elem.origin.name}</p>\n            <p>{'Episodios: ' + props.elem.episode.length}</p>\n          </div>\n        </article>\n        <Link to={'/'} className='character-detail-button'>Volver</Link>\n      </section>\n    );\n  } else {\n    return (\n      <div className='character-detail-no-content'>\n        <h2 className='list-no-content'>No hay datos</h2>\n        <Link className='character-detail-button' to={'/'}><img src={noresults} alt='Rick and Morty'></img>\n        Volver</Link>\n      </div>\n    )\n  }\n}\n\nexport default CharterDetail;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { getCharactersFromAPI } from '../service/API';\nimport '../styles/App.scss';\nimport Header from './Header';\nimport Form from './Form';\nimport List from './List';\nimport CharacterDetail from './CharterDetail'\n\nfunction App() {\n  const [characters, setCharacters] = useState([])\n  const [searchInput, setSearchInput] = useState('')\n\n  useEffect(() => {\n    getCharactersFromAPI().then(characters => {\n      setCharacters(characters)\n    })\n  }, []);\n\n  function onNameChange({ target }) {\n    setSearchInput(target.value)\n    setCharacters(characters);\n  }\n\n  function onSubmit(ev) {\n    ev.preventDefault()\n  }\n\n  function applyFilters() {\n    //Si filters.name.length es true (hay algo escrito) ? se hace el filtro de allcharacter por nombre, si es false (no hay nada escrito) : se muestran todos los characters.\n    return searchInput ? characters.filter(elem => elem.name.toUpperCase().includes(searchInput.toUpperCase())) : characters;\n  }\n\n  function searchCharacterById(id, array) {\n    return array.find(elem => elem.id.toString() === id.toString());\n  }\n\n  function newSearch() {\n    setSearchInput('');\n    setCharacters(characters);\n  }\n\n  return (\n    <>\n      <Header></Header>\n      <Switch>\n        <Route exact path='/' render={\n          () =>\n            <>\n              <Form placeholderSearch='Busca tu personaje' onNameChange={onNameChange} onSubmit={onSubmit} value={searchInput} onReset={newSearch}></Form>\n              <List list={applyFilters()} value={searchInput} ></List>\n            </>\n        }>\n        </Route>\n        <Route\n          path='/CharacterDetail/:id'\n          render={routerProps =>\n            <CharacterDetail match={routerProps.match} elem={searchCharacterById(routerProps.match.params.id, characters)}></CharacterDetail>\n          }\n        ></Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const ENDPOINT = 'https://rickandmortyapi.com/api/character/';\n\nconst getCharactersFromAPI = () => fetch(ENDPOINT)\n  .then(response => response.json())\n  .then(characters => characters.results)\n\nexport { getCharactersFromAPI };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './styles/index.scss';\nimport App from './components/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}